ylab("Air Temperature (C)") +
labs(title = "Diurnal fluctuations in air temperature") +
scale_color_manual(values = c(Urban = "red", All = "#E69F00", Agriculture = "blue")) +
guides(alpha = FALSE, col = guide_legend(title="Landcover type"), shape = guide_legend(title="Landcover type")) +
theme_bw()
ggplot(overview, aes(x = hour(dt) + minute(dt)/60, y = biting_rate, col = landcover, shape = landcover)) +
geom_point(size = 2) +
# geom_smooth(method = "lm",
#         formula = y ~
#           I(sin((2*pi*(x))/24)) + I(cos((2*pi*(x))/24)) +
#           I(sin((2*2*pi*(x))/24)) + I(cos((2*2*pi*(x))/24)) +
#           I(sin((2*2*2*pi*(x))/24)) + I(cos((2*2*2*pi*(x))/24)),
#         se = FALSE) +
xlab("Hour of day") +
ylim(0,.26) +
ylab("Biting Rate") +
labs(title = "Diurnal fluctuations in biting rates") +
scale_color_manual(values = c(Urban = "red", All = "#E69F00", Agriculture = "blue")) +
guides(alpha = FALSE, col = guide_legend(title="Landcover type"), shape = guide_legend(title="Landcover type")) +
theme_bw()
ggplot(overview, aes(x = hour(dt) + minute(dt)/60, y = transmission_prob, col = landcover, shape = landcover)) +
geom_point(size = 2) +
# geom_smooth(method = "lm",
#         formula = y ~
#           I(sin((2*pi*(x))/24)) + I(cos((2*pi*(x))/24)) +
#           I(sin((2*2*pi*(x))/24)) + I(cos((2*2*pi*(x))/24)),
#         se = FALSE) +
xlab("Hour of day") +
ylim(0,20) +
ylab("Transmission Probability (%)") +
labs(title = "Diurnal fluctuations in transmission probabilities") +
scale_color_manual(values = c(Urban = "red", All = "#E69F00", Agriculture = "blue")) +
guides(alpha = FALSE, col = guide_legend(title="Landcover type"), shape = guide_legend(title="Landcover type")) +
theme_bw()
bite <- ifelse(is.nan(bite), 0, bite)
bite[is.nan(bite)] <- 0
return(bit)
# The results are stored in a data frame as land_cover_avgs.RData
library(here)
library(raster)
library(sf)
library(lubridate)
library(data.table)
files <- list.files(here::here("risk_maps",
"data",
"processed_data",
"ECOSTRESS",
"air_temperature"))
landcover_sf <- st_read(here::here("risk_maps",
"data",
"processed_data",
"Landcover",
"landcover.shp"))
bite <- function(T){
bite <- (1.67*10^-4) * T * (T- 2.3) * (32.0 - T)^(1/2)
bite[is.nan(bite)] <- 0
return(bite)
}
library(here)
library(raster)
library(sf)
library(lubridate)
library(data.table)
files <- list.files(here::here("risk_maps",
"data",
"processed_data",
"ECOSTRESS",
"air_temperature"))
landcover_sf <- st_read(here::here("risk_maps",
"data",
"processed_data",
"Landcover",
"landcover.shp"))
bite <- function(T){
bite <- (1.67*10^-4) * T * (T- 2.3) * (32.0 - T)^(1/2)
bite <- ifelse(is.nan(bite), 0, bite)
return(bite)
}
transmit <- function(T){
-(2.94*10^-3) * T * (T - 11.3) * (T - 41.9)
}
mask_and_mean <- function(raster, landcover_shp, inverse = FALSE){
mask <- raster::mask(raster,
landcover_shp,
inverse = inverse)
bx <- bite(mask)
tx <- transmit(mask)
air_temperature <- cellStats(mask, "mean", na.rm = TRUE)
biting_rate <- cellStats(bx, "mean", na.rm = TRUE)
transmission_prob <- cellStats(tx, "mean", na.rm = TRUE)
return(c(air_temperature, biting_rate, transmission_prob))
}
make_avgs <- function(file){
print(paste("New file:", file))
averages <- data.table()
# read in raster
airtemp_raster <- raster(here::here("risk_maps",
"data",
"processed_data",
"ECOSTRESS",
"air_temperature",
file))
# get the dt
date <- substr(file, 14, 23)
hhmmss <- str_extract(file, regex('[0-9]{2}:{1}[0-9]{2}:{1}[0-9]{2}'))
Year <- year(ymd(date))
#make the rows
lc <- filter(landcover_sf, is.na(year) | year == Year)
for (landtype in lc$landcover){
lt <- filter(lc, landcover == landtype)
abt <- mask_and_mean(airtemp_raster, lt)
averages <- rbind(averages,
data.table(date = date,
hhmmss = hhmmss,
landcover = landtype,
air_temperature = abt[1],
biting_rate = abt[2],
transmission_prob = abt[3]))
}
return(averages)
}
landcover_avgs <- rbindlist(lapply(files, FUN = make_avgs))
landcover_avgs$date <- ymd(landcover_avgs$date)
landcover_avgs$dt <- ymd_hms(paste(landcover_avgs$date,
landcover_avgs$hhmmss),
tz = "America/Los_Angeles")
landcover_avgs$hhmmss <- NULL
saveRDS(landcover_avgs, here::here("risk_maps",
"data",
"processed_data",
"landcover_avgs.RData"))
mask_and_mean <- function(raster, landcover_shp, inverse = FALSE){
mask <- raster::mask(raster,
landcover_shp,
inverse = inverse)
bx <- bite(mask)
tx <- transmit(mask)
air_temperature <- cellStats(mask, "mean", na.rm = TRUE)
biting_rate <- cellStats(bx, "mean", na.rm = TRUE)
transmission_prob <- cellStats(tx, "mean", na.rm = TRUE)
return(c(air_temperature, biting_rate, transmission_prob))
}
make_avgs <- function(file){
print(paste("New file:", file))
averages <- data.table()
# read in raster
airtemp_raster <- raster(here::here("risk_maps",
"data",
"processed_data",
"ECOSTRESS",
"air_temperature",
file))
# get the dt
date <- substr(file, 14, 23)
hhmmss <- str_extract(file, regex('[0-9]{2}:{1}[0-9]{2}:{1}[0-9]{2}'))
Year <- year(ymd(date))
#make the rows
lc <- filter(landcover_sf, is.na(year) | year == Year)
for (landtype in lc$landcover){
lt <- filter(lc, landcover == landtype)
abt <- mask_and_mean(airtemp_raster, lt)
averages <- rbind(averages,
data.table(date = date,
hhmmss = hhmmss,
landcover = landtype,
air_temperature = abt[1],
biting_rate = abt[2],
transmission_prob = abt[3]))
}
return(averages)
}
landcover_avgs <- rbindlist(lapply(files, FUN = make_avgs))
file <- files[1]
file
print(paste("New file:", file))
averages <- data.table()
# read in raster
airtemp_raster <- raster(here::here("risk_maps",
"data",
"processed_data",
"ECOSTRESS",
"air_temperature",
file))
# get the dt
date <- substr(file, 14, 23)
hhmmss <- str_extract(file, regex('[0-9]{2}:{1}[0-9]{2}:{1}[0-9]{2}'))
Year <- year(ymd(date))
#make the rows
lc <- filter(landcover_sf, is.na(year) | year == Year)
for (landtype in lc$landcover){
lt <- filter(lc, landcover == landtype)
abt <- mask_and_mean(airtemp_raster, lt)
averages <- rbind(averages,
data.table(date = date,
hhmmss = hhmmss,
landcover = landtype,
air_temperature = abt[1],
biting_rate = abt[2],
transmission_prob = abt[3]))
}
lc$landcover
lt <- filter(lc, landcover == landtype)
landtype
averages <- rbind(averages,
data.table(date = date,
hhmmss = hhmmss,
landcover = landtype,
air_temperature = abt[1],
biting_rate = abt[2],
transmission_prob = abt[3]))
abt <- mask_and_mean(airtemp_raster, lt)
library(here)
library(raster)
library(sf)
library(lubridate)
library(data.table)
files <- list.files(here::here("risk_maps",
"data",
"processed_data",
"ECOSTRESS",
"air_temperature"))
landcover_sf <- st_read(here::here("risk_maps",
"data",
"processed_data",
"Landcover",
"landcover.shp"))
bite <- function(T){
bite <- (1.67*10^-4) * T * (T- 2.3) * (32.0 - T)^(1/2)
bite[is.nan(bite)] <- 0
return(bite)
}
transmit <- function(T){
-(2.94*10^-3) * T * (T - 11.3) * (T - 41.9)
}
mask_and_mean <- function(raster, landcover_shp, inverse = FALSE){
mask <- raster::mask(raster,
landcover_shp,
inverse = inverse)
bx <- bite(mask)
tx <- transmit(mask)
air_temperature <- cellStats(mask, "mean", na.rm = TRUE)
biting_rate <- cellStats(bx, "mean", na.rm = TRUE)
transmission_prob <- cellStats(tx, "mean", na.rm = TRUE)
return(c(air_temperature, biting_rate, transmission_prob))
}
make_avgs <- function(file){
print(paste("New file:", file))
averages <- data.table()
# read in raster
airtemp_raster <- raster(here::here("risk_maps",
"data",
"processed_data",
"ECOSTRESS",
"air_temperature",
file))
# get the dt
date <- substr(file, 14, 23)
hhmmss <- str_extract(file, regex('[0-9]{2}:{1}[0-9]{2}:{1}[0-9]{2}'))
Year <- year(ymd(date))
#make the rows
lc <- filter(landcover_sf, is.na(year) | year == Year)
for (landtype in lc$landcover){
lt <- filter(lc, landcover == landtype)
abt <- mask_and_mean(airtemp_raster, lt)
averages <- rbind(averages,
data.table(date = date,
hhmmss = hhmmss,
landcover = landtype,
air_temperature = abt[1],
biting_rate = abt[2],
transmission_prob = abt[3]))
}
return(averages)
}
landcover_avgs <- rbindlist(lapply(files, FUN = make_avgs))
landcover_avgs$date <- ymd(landcover_avgs$date)
landcover_avgs$dt <- ymd_hms(paste(landcover_avgs$date,
landcover_avgs$hhmmss),
tz = "America/Los_Angeles")
landcover_avgs$hhmmss <- NULL
saveRDS(landcover_avgs, here::here("risk_maps",
"data",
"processed_data",
"landcover_avgs.RData"))
#this script reads in the air temperature rasters,
# subsets an area of interest by land cover,
# and calculates the average temperature, biting rate, and transmission prob for that area.
# The results are stored in a data frame as land_cover_avgs.RData
library(here)
library(raster)
library(sf)
library(lubridate)
library(data.table)
files <- list.files(here::here("risk_maps",
"data",
"processed_data",
"ECOSTRESS",
"air_temperature"))
landcover_sf <- st_read(here::here("risk_maps",
"data",
"processed_data",
"Landcover",
"landcover.shp"))
bite <- function(T){
bite <- (1.67*10^-4) * T * (T- 2.3) * (32.0 - T)^(1/2)
bite[is.nan(bite)] <- 0
return(bite)
}
transmit <- function(T){
-(2.94*10^-3) * T * (T - 11.3) * (T - 41.9)
}
mask_and_mean <- function(raster, landcover_shp, inverse = FALSE){
mask <- raster::mask(raster,
landcover_shp,
inverse = inverse)
bx <- bite(mask)
tx <- transmit(mask)
air_temperature <- cellStats(mask, "mean", na.rm = TRUE)
biting_rate <- cellStats(bx, "mean", na.rm = TRUE)
transmission_prob <- cellStats(tx, "mean", na.rm = TRUE)
return(c(air_temperature, biting_rate, transmission_prob))
}
print(paste("New file:", file))
averages <- data.table()
# read in raster
airtemp_raster <- raster(here::here("risk_maps",
"data",
"processed_data",
"ECOSTRESS",
"air_temperature",
file))
# get the dt
date <- substr(file, 14, 23)
hhmmss <- str_extract(file, regex('[0-9]{2}:{1}[0-9]{2}:{1}[0-9]{2}'))
Year <- year(ymd(date))
#make the rows
lc <- filter(landcover_sf, is.na(year) | year == Year)
for (landtype in lc$landcover){
lt <- filter(lc, landcover == landtype)
abt <- mask_and_mean(airtemp_raster, lt)
averages <- rbind(averages,
data.table(date = date,
hhmmss = hhmmss,
landcover = landtype,
air_temperature = abt[1],
biting_rate = abt[2],
transmission_prob = abt[3]))
}
View(averages)
file = files[30]
print(paste("New file:", file))
averages <- data.table()
# read in raster
airtemp_raster <- raster(here::here("risk_maps",
"data",
"processed_data",
"ECOSTRESS",
"air_temperature",
file))
# get the dt
date <- substr(file, 14, 23)
hhmmss <- str_extract(file, regex('[0-9]{2}:{1}[0-9]{2}:{1}[0-9]{2}'))
Year <- year(ymd(date))
#make the rows
lc <- filter(landcover_sf, is.na(year) | year == Year)
for (landtype in lc$landcover){
lt <- filter(lc, landcover == landtype)
abt <- mask_and_mean(airtemp_raster, lt)
averages <- rbind(averages,
data.table(date = date,
hhmmss = hhmmss,
landcover = landtype,
air_temperature = abt[1],
biting_rate = abt[2],
transmission_prob = abt[3]))
}
View(averages)
#this script reads in the air temperature rasters,
# subsets an area of interest by land cover,
# and calculates the average temperature, biting rate, and transmission prob for that area.
# The results are stored in a data frame as land_cover_avgs.RData
library(here)
library(raster)
library(sf)
library(lubridate)
library(data.table)
files <- list.files(here::here("risk_maps",
"data",
"processed_data",
"ECOSTRESS",
"air_temperature"))
landcover_sf <- st_read(here::here("risk_maps",
"data",
"processed_data",
"Landcover",
"landcover.shp"))
bite <- function(T){
bite <- (1.67*10^-4) * T * (T- 2.3) * (32.0 - T)^(1/2)
bite[is.nan(bite)] <- 0
return(bite)
}
transmit <- function(T){
-(2.94*10^-3) * T * (T - 11.3) * (T - 41.9)
}
mask_and_mean <- function(raster, landcover_shp, inverse = FALSE){
mask <- raster::mask(raster,
landcover_shp,
inverse = inverse)
bx <- bite(mask)
tx <- transmit(mask)
air_temperature <- cellStats(mask, "mean", na.rm = TRUE)
biting_rate <- cellStats(bx, "mean", na.rm = TRUE)
transmission_prob <- cellStats(tx, "mean", na.rm = TRUE)
return(c(air_temperature, biting_rate, transmission_prob))
}
make_avgs <- function(file){
print(paste("New file:", file))
averages <- data.table()
# read in raster
airtemp_raster <- raster(here::here("risk_maps",
"data",
"processed_data",
"ECOSTRESS",
"air_temperature",
file))
# get the dt
date <- substr(file, 14, 23)
hhmmss <- str_extract(file, regex('[0-9]{2}:{1}[0-9]{2}:{1}[0-9]{2}'))
Year <- year(ymd(date))
#make the rows
lc <- filter(landcover_sf, is.na(year) | year == Year)
for (landtype in lc$landcover){
lt <- filter(lc, landcover == landtype)
abt <- mask_and_mean(airtemp_raster, lt)
averages <- rbind(averages,
data.table(date = date,
hhmmss = hhmmss,
landcover = landtype,
air_temperature = abt[1],
biting_rate = abt[2],
transmission_prob = abt[3]))
}
return(averages)
}
landcover_avgs <- rbindlist(lapply(files, FUN = make_avgs))
landcover_avgs$date <- ymd(landcover_avgs$date)
landcover_avgs$dt <- ymd_hms(paste(landcover_avgs$date,
landcover_avgs$hhmmss),
tz = "America/Los_Angeles")
landcover_avgs$hhmmss <- NULL
saveRDS(landcover_avgs, here::here("risk_maps",
"data",
"processed_data",
"landcover_avgs.RData"))
landcover_avg <- readRDS(here::here("risk_maps",
"data",
"processed_data",
"landcover_avgs.RData"))
# landcover_avg$landcover <- as.factor(landcover_avg$landcover)
overview <- filter(landcover_avg, landcover %in% c("Urban", "Agriculture"))
overview$landcover <- factor(overview$landcover, levels = c("Urban", "Agriculture"))
#overview plots
ggplot(overview, aes(x = hour(dt) + minute(dt)/60, y = air_temperature, col = landcover, shape = landcover)) +
geom_point(size = 2) + #aes(alpha = .2)
# geom_smooth(method = "lm",
#         formula = y ~
#           I(sin((2*pi*(x))/24)) + I(cos((2*pi*(x))/24)) + I(sin((2*2*pi*(x))/24)) + I(cos((2*2*pi*(x))/24)),
#         se = FALSE) +
# geom_line(aes(y=rollmedian(air_temperature, 7, na.pad=TRUE))) +
xlab("Hour of day") +
ylab("Air Temperature (C)") +
labs(title = "Diurnal fluctuations in air temperature") +
scale_color_manual(values = c(Urban = "red", All = "#E69F00", Agriculture = "blue")) +
guides(alpha = FALSE, col = guide_legend(title="Landcover type"), shape = guide_legend(title="Landcover type")) +
theme_bw()
ggplot(overview, aes(x = hour(dt) + minute(dt)/60, y = biting_rate, col = landcover, shape = landcover)) +
geom_point(size = 2) +
# geom_smooth(method = "lm",
#         formula = y ~
#           I(sin((2*pi*(x))/24)) + I(cos((2*pi*(x))/24)) +
#           I(sin((2*2*pi*(x))/24)) + I(cos((2*2*pi*(x))/24)) +
#           I(sin((2*2*2*pi*(x))/24)) + I(cos((2*2*2*pi*(x))/24)),
#         se = FALSE) +
xlab("Hour of day") +
ylim(0,.26) +
ylab("Biting Rate") +
labs(title = "Diurnal fluctuations in biting rates") +
scale_color_manual(values = c(Urban = "red", All = "#E69F00", Agriculture = "blue")) +
guides(alpha = FALSE, col = guide_legend(title="Landcover type"), shape = guide_legend(title="Landcover type")) +
theme_bw()
ggplot(overview, aes(x = hour(dt) + minute(dt)/60, y = transmission_prob, col = landcover, shape = landcover)) +
geom_point(size = 2) +
# geom_smooth(method = "lm",
#         formula = y ~
#           I(sin((2*pi*(x))/24)) + I(cos((2*pi*(x))/24)) +
#           I(sin((2*2*pi*(x))/24)) + I(cos((2*2*pi*(x))/24)),
#         se = FALSE) +
xlab("Hour of day") +
ylim(0,20) +
ylab("Transmission Probability (%)") +
labs(title = "Diurnal fluctuations in transmission probabilities") +
scale_color_manual(values = c(Urban = "red", All = "#E69F00", Agriculture = "blue")) +
guides(alpha = FALSE, col = guide_legend(title="Landcover type"), shape = guide_legend(title="Landcover type")) +
theme_bw()
max <- optimize(function(x){-(2.94*10^-3) * x * (x - 11.3) * (x - 41.9)}, interval=c(0, 30), maximum=TRUE)$objective
max
max <- optimize(function(x){-(2.94*10^-3) * x * (x - 11.3) * (x - 41.9)}, interval=c(0, 40), maximum=TRUE)$objective
max
max <- optimize(function(x){(1.67*10^-4) * x * (x- 2.3) * (32.0 - x)^(1/2)}, interval=c(0, 40), maximum=TRUE)$objective
max
0.063/max
3.3/19.62714
