---
title: "Miscelaneous other code and figures"
author: "Anna Boser"
date: "3/30/2021"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Miscellaneous figures that did not make it into the paper

* Different ag types vs urban
* Heterogeneity within urban

###from risk map
```{r landcover_breakdown} 
all_pixels <- readRDS(here::here("risk_maps",
                               "data",
                               "processed_data",
                               "all_pixels.RData"))

ag_types <- c("Vegetable", "Orchard", "Fruit", "Field Crop", "Uncultivated")
all_pixels$landcover <- factor(all_pixels$landcover, levels = c("Urban",  "Uncultivated", "Vegetable", "Fruit", "Orchard", "Field Crop", "Other"))

newrow <- all_pixels[1,]
newrow[,1] <- "Day"
newrow[,4] <- "Urban"
newrow[,5] <- NA
newrow[,6] <- .000001
newrow[,7] <- NA
newrow[,8] <- TRUE

all_pixels <- rbind(all_pixels, newrow)

plot_densities <- function(type, formaltype, xlim, ylim){
  print(filter(all_pixels, Urban == TRUE) %>%
    ggplot(aes(x = get(type), fill= time_of_day, alpha = 0.2)) +
    geom_density() +
    # labs(title = "Urban") +
    xlim(xlim) +
    ylim(ylim) +
    guides(alpha = FALSE, fill = guide_legend(title = "Selected image time")) +
      xlab(formaltype) +
      ylab("Density"))

  print(filter(all_pixels, landcover %in% ag_types) %>%
    ggplot(aes(x = get(type), fill= time_of_day, alpha = 0.2)) +
    geom_density() +
    # labs(title = "Agriculture") +
    xlim(xlim) +
    ylim(ylim) +
    guides(alpha = FALSE, fill = guide_legend(title = "Selected image time")) +
      xlab(formaltype) +
      ylab("Density"))
}

plot_densities("air_temperature", "Air Temperature", c(12, 37), c(0, 1.7))
plot_densities("biting_rate", "Biting Rate", c(0, .254), c(0, 250))
plot_densities("transmission_prob", "Transmission Probability", c(0, 26), c(0, 1.8))

filter(all_pixels, time_of_day == "Day", landcover %in% ag_types) %>%
  ggplot(aes(x = air_temperature, col= landcover, alpha = 0.2)) +
  geom_density() +
    guides(alpha = FALSE, col = guide_legend(title = "Crop category")) +
      xlab("Air temperature") +
      ylab("Density") +
  xlim(29.5, 36.7) +
  labs(title = "Daytime air temperatures by crop type",
       subtitle = "August 4th, 2019 at 2:15pm")

filter(all_pixels, time_of_day == "Day", landcover %in% ag_types) %>%
  ggplot(aes(x = transmission_prob, col= landcover, alpha = 0.2)) +
  geom_density() +
    guides(alpha = FALSE, col = guide_legend(title = "Crop category")) +
      xlab("Transmission probability") +
      ylab("Density") +
  xlim(14.5, 20) +
  labs(title = "Daytime transmission probability by crop type",
       subtitle = "August 4th, 2019 at 2:15pm")
```


###from temp mod
```{r}
ggplot(Comp_temp, aes(x =  V, y =ECOSTRESS)) +
    geom_point(aes(color = Air_Temp)) +
  # stat_function(fun = function(x){6.906e-01 + 1.432e+00*x -2.213e-02*x^2 + 1.473e-04*x^3}, show.legend = TRUE) +
  geom_smooth(method = "lm") +
  labs(title = "Fractional vegetation vs. land surface temperature",
       subtitle = "June - September, 2018 - 2020, San Joaquin Valley") +
  ylab("LST (C)") +
  xlab("Fractional vegetation") +
  ylim(min = 0, max = 45) +
  scale_colour_gradientn(colors = c("darkblue", "blue", "steelblue1", "white", "yellow", "orange", "red")) +
  labs(color = "Air Temperature (C)") +
  # theme_dark() +
  guides(alpha = FALSE)

ggplot(Comp_temp, aes(x =  ECOSTRESS, y =Air_Temp)) +
  geom_point(aes(color = V, alpha = .2)) +
  # stat_function(fun = function(x){6.906e-01 + 1.432e+00*x -2.213e-02*x^2 + 1.473e-04*x^3}, show.legend = TRUE) +
  stat_function(fun = function(x){x}, show.legend = TRUE) +
  labs(title = "Land surface temperature vs. air temperature by vegetation fraction",
       subtitle = "June - September, 2018 - 2020, San Joaquin Valley",
       caption = "Air temperature values from CIMIS weather stations.
       Land surface temperature from ECOSTRESS") +
  ylab("Air Temperature (C)") +
  xlab("Land Surface Temperature (C)") +
  ylim(min = 0, max = 45) +
  xlim(min = 0, max = 60) +
  scale_colour_gradient(low = "tan", high = "darkgreen") +
  labs(color = "Vegetation fraction") +
  # theme_dark() +
  guides(alpha = FALSE)

ggplot(Comp_temp, aes(x =  V, y =Air_Temp)) + 
    geom_point(aes(color = hour(dt) + minute(dt)/60)) +
  # stat_function(fun = function(x){6.906e-01 + 1.432e+00*x -2.213e-02*x^2 + 1.473e-04*x^3}, show.legend = TRUE) + 
  geom_smooth(method = "lm") + 
  labs(title = "Fractional vegetation vs. air temperature", 
       subtitle = "June - September, 2018 - 2020, San Joaquin Valley") + 
  ylab("Air Temperatre (C)") + 
  xlab("Fractional vegetation") + 
  ylim(min = 0, max = 45) + 
  scale_colour_gradientn(colors = c("darkblue", "blue", "steelblue1", "white", "yellow", "orange", "red", "orange", "yellow", "white", "steelblue1", "blue", "darkblue")) + 
  labs(color = "Hour of day") + 
  # theme_dark() + 
  guides(alpha = FALSE)

ggplot(filter(Comp_temp, hour(dt) %in% 9:13), aes(x =  V, y =Air_Temp)) + 
    geom_point(aes(color = hour(dt) + minute(dt)/60)) +
  # stat_function(fun = function(x){6.906e-01 + 1.432e+00*x -2.213e-02*x^2 + 1.473e-04*x^3}, show.legend = TRUE) + 
  geom_smooth(method = "lm") + 
  labs(title = "Fractional vegetation vs. air temperature", 
       subtitle = "June - September, 2018 - 2020, San Joaquin Valley") + 
  ylab("Air Temperatre (C)") + 
  xlab("Fractional vegetation") + 
  ylim(min = 0, max = 45) + 
  # scale_colour_gradientn(colors = c("darkblue", "blue", "steelblue1", "white", "yellow", "orange", "red", "orange", "yellow", "white", "steelblue1", "blue", "darkblue")) + 
  labs(color = "Hour of day") + 
  # theme_dark() + 
  guides(alpha = FALSE)

ggplot(filter(Comp_temp, hour(dt) %in% c(0:9, 13:24)), aes(x =  V, y =Air_Temp)) + 
    geom_point(aes(color = hour(dt) + minute(dt)/60)) +
  # stat_function(fun = function(x){6.906e-01 + 1.432e+00*x -2.213e-02*x^2 + 1.473e-04*x^3}, show.legend = TRUE) + 
  geom_smooth(method = "lm") + 
  labs(title = "Fractional vegetation vs. air temperature", 
       subtitle = "June - September, 2018 - 2020, San Joaquin Valley") + 
  ylab("Air Temperatre (C)") + 
  xlab("Fractional vegetation") + 
  ylim(min = 0, max = 45) + 
  # scale_colour_gradientn(colors = c("darkblue", "blue", "steelblue1", "white", "yellow", "orange", "red", "orange", "yellow", "white", "steelblue1", "blue", "darkblue")) + 
  labs(color = "Hour of day") + 
  # theme_dark() + 
  guides(alpha = FALSE)

ggplot(Comp_temp, aes(x =  hour(dt) + minute(dt)/60, y =Air_Temp)) + 
    geom_point(aes(color = V)) +
  # stat_function(fun = function(x){6.906e-01 + 1.432e+00*x -2.213e-02*x^2 + 1.473e-04*x^3}, show.legend = TRUE) + 
  # geom_smooth(method = "lm") + 
  labs(title = "Hour of day vs. air temperature", 
       subtitle = "June - September, 2018 - 2020, San Joaquin Valley") + 
  ylab("Air Temperatre (C)") + 
  xlab("Hour of day") + 
  ylim(min = 0, max = 45) + 
  scale_colour_gradientn(colors = c("red", "orange", "yellow", "white", "steelblue1", "blue", "darkblue")) + 
  labs(color = "Fractional vegetation") + 
  # theme_dark() + 
  guides(alpha = FALSE)

fit values
Comp_temp$air_temp_modeled <- final$fitted.values

ggplot(Comp_temp, aes(y = air_temp_modeled, x = Air_Temp)) +
  geom_point(aes(alpha = .2)) +
  stat_function(fun = function(x){x}, aes(color = "One to one"), show.legend = TRUE) +
  labs(title = "Modeled vs. observed air temperature",
       subtitle = "San Joaquin Valley, June - September, 2018 - 2020",
       caption = "") +
  xlab("Observed Air Temperature (C)") +
  ylab("Modeled Air Temperature (C)") +
  ylim(c(0, 45)) +
  xlim(c(0, 45)) +
  geom_smooth(method = "lm", se = FALSE, aes(color = "Linear regression")) +
  guides(alpha = FALSE) +
  scale_color_manual(values = c("#D55E00", "gray64")) +
  theme(legend.title = element_blank())

```

